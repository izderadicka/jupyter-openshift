apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: notebook
spec:
  selector:
    matchLabels:
      app: notebook # has to match .spec.template.metadata.labels
  serviceName: notebook
  replicas: 1 # only one replika is supported
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: notebook # has to match .spec.selector.matchLabels
    spec:
      containers:
      - command:
        - start-notebook.py
        - --config=/etc/jupyter/openshift/jupyter_server_config.py
        - --no-browser
        - --ip=0.0.0.0
        env:
        - name: JUPYTER_NOTEBOOK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: notebook-secret
              key: password
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: jupyter-notebook
        ports:
        - containerPort: 8888
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /etc/jupyter/openshift
          name: configs
        - mountPath: /home/jovyan
          name: notebook-data
      restartPolicy: Always
      securityContext:
        supplementalGroups:
        - 100
      volumes:
      - configMap:
          defaultMode: 420
          name: notebook-cfg
        name: configs    
  volumeClaimTemplates:
  - metadata:
      name: notebook-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
          requests:
            storage: {{ .Values.volume.size }}
      {{- if ne .Values.volume.storageClass "" }}
      storageClassName: {{ .Values.volume.storageClass }}
      {{- end }}
      volumeMode: Filesystem
